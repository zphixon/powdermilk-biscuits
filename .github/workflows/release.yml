name: release

on:
  push:
    tags: [ "release-**" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: build cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions/cache@v3
        name: deps cache
        id: cache-deps
        with:
          path: |
            ~/.cargo/bin/
            apt/*.deb
          key: ${{ runner.os }}-deps

      - name: download gtk/glslang/naga
        if: '!steps.cache-deps.outputs.cache-hit'
        run: |
          sudo apt install --download-only glslang-tools build-essential libgtk-3-dev
          mkdir -p apt
          cp /var/cache/apt/archives/*.deb apt
          sudo apt install glslang-tools build-essential libgtk-3-dev
          cargo install naga-cli

      - name: install gtk/glslang
        if: 'steps.cache-deps.outputs.cache-hit'
        run: |
          sudo cp apt/*.deb /var/cache/apt/archives/
          sudo apt install glslang-tools build-essential libgtk-3-dev

      - name: check shader compilers are working
        run: |
          naga backend-wgpu/src/shaders/stroke_mesh.wgsl
          glslangValidator backend-gl/src/shaders/stroke_line.vert

      - name: test
        run: cargo test --release --features pmb-release

      - name: build
        run: cargo build --release --features pmb-release

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: |
            target/release/backend-gl
            target/release/backend-wgpu
            target/release/pmb-util

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: build cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions/cache@v3
        name: deps cache
        id: cache-deps
        with:
          path: |
            C:\glslang\
            ~/.cargo/bin/
          key: ${{ runner.os }}-deps

      - name: download glslang/naga
        if: '!steps.cache-deps.outputs.cache-hit'
        run: |
          Invoke-WebRequest -URI https://ci.appveyor.com/api/buildjobs/73ctb6evrl4d1r10/artifacts/build%2Finstall%2Fglslang-master-windows-x64-Release.zip -OutFile glslang.zip
          7z x glslang.zip -oC:\glslang
          cargo install naga-cli

      - name: check shader compilers
        run: |
          Add-Content $env:GITHUB_PATH 'C:\glslang\bin'
          $env:Path += ';C:\glslang\bin'
          glslangValidator backend-gl/src/shaders/stroke_line.vert
          naga backend-wgpu/src/shaders/stroke_mesh.wgsl

      - name: test
        run: cargo test --release --features pmb-release
      - name: build
        run: |
          cargo build --release --features pmb-release

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: |
            target/release/backend-gl.exe
            target/release/backend-wgpu.exe
            target/release/pmb-util.exe

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: build cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions/cache@v3
        name: deps cache
        id: cache-deps
        with:
          path: |
            /usr/local/Cellar/glslang/*
            ~/.cargo/bin/
          key: ${{ runner.os }}-deps

      - name: install glslang/naga
        if: '!steps.cache-deps.outputs.cache-hit'
        run: |
          cargo install naga-cli
          brew install glslang

      - name: link glslang
        if: 'steps.cache-deps.outputs.cache-hit'
        run: brew link glslang

      - name: check shader compilers are working
        run: |
          naga backend-wgpu/src/shaders/stroke_mesh.wgsl
          glslangValidator backend-gl/src/shaders/stroke_line.vert

      - name: test
        run: cargo test --release --features pmb-release

      - name: build
        run: cargo build --release --features pmb-release

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos
          path: |
            target/release/backend-gl
            target/release/backend-wgpu
            target/release/pmb-util

  package:
    needs: [windows, linux, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - run: |
          7z a windows.zip windows/backend-gl.exe windows/backend-wgpu.exe windows/pmb-util.exe
          7z a linux.zip linux/backend-gl linux/backend-wgpu linux/pmb-util
          7z a macos.zip macos/backend-gl macos/backend-wgpu macos/pmb-util
          rm -r windows linux macos

      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: true
          files: |
            windows.zip
            linux.zip
            macos.zip
