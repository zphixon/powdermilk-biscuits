name: release

on:
  push:
    tags: [ "release-**" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: build cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions/cache@v3
        name: deps cache
        id: cache-deps
        with:
          path: |
            ~/.cargo/bin/
            apt/*.deb
          key: ${{ runner.os }}-deps

      - name: download gtk/glslang/naga
        if: '!steps.cache-deps.outputs.cache-hit'
        run: |
          sudo apt install --download-only glslang-tools build-essential libgtk-3-dev
          mkdir -p apt
          cp /var/cache/apt/archives/*.deb apt
          sudo apt install glslang-tools build-essential libgtk-3-dev
          cargo install naga-cli

      - name: install gtk/glslang
        if: 'steps.cache-deps.outputs.cache-hit'
        run: |
          sudo cp apt/*.deb /var/cache/apt/archives/
          sudo apt install glslang-tools build-essential libgtk-3-dev

      - name: check shader compilers are working
        run: |
          naga backend-wgpu/src/shaders/stroke_mesh.wgsl
          glslangValidator backend-gl/src/shaders/stroke_line.vert

      - name: test
        run: cargo test --release --features pmb-release

      - name: build
        run: cargo build --release --features pmb-release

      - name: gl backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-gl-linux
          path: target/release/backend-gl

      - name: wgpu backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-wgpu-linux
          path: target/release/backend-wgpu

      - name: util artifact
        uses: actions/upload-artifact@v3
        with:
          name: util-linux
          path: target/release/pmb-util

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: build cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions/cache@v3
        name: deps cache
        id: cache-deps
        with:
          path: |
            C:\glslang\
            ~/.cargo/bin/
          key: ${{ runner.os }}-deps

      - name: download glslang/naga
        if: '!steps.cache-deps.outputs.cache-hit'
        run: |
          Invoke-WebRequest -URI https://ci.appveyor.com/api/buildjobs/nweuuamas19eil5c/artifacts/build%2Finstall%2Fglslang-master-windows-x64-Release.zip -OutFile glslang.zip
          7z x glslang.zip -oC:\glslang
          cargo install naga-cli

      - name: check shader compilers
        run: |
          Add-Content $env:GITHUB_PATH 'C:\glslang\bin'
          $env:Path += ';C:\glslang\bin'
          glslangValidator backend-gl/src/shaders/stroke_line.vert
          naga backend-wgpu/src/shaders/stroke_mesh.wgsl

      - name: test
        run: cargo test --release --features pmb-release
      - name: build
        run: |
          cargo build --release --features pmb-release

      - name: gl backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-gl-win.exe
          path: target/release/backend-gl.exe

      - name: wgpu backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-wgpu-win.exe
          path: target/release/backend-wgpu.exe

      - name: util artifact
        uses: actions/upload-artifact@v3
        with:
          name: util-windows.exe
          path: target/release/pmb-util.exe

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: build cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions/cache@v3
        name: deps cache
        id: cache-deps
        with:
          path: |
            /usr/local/Cellar/glslang/*
            ~/.cargo/bin/
          key: ${{ runner.os }}-deps

      - name: install glslang/naga
        if: '!steps.cache-deps.outputs.cache-hit'
        run: |
          cargo install naga-cli
          brew install glslang

      - name: link glslang
        if: 'steps.cache-deps.outputs.cache-hit'
        run: brew link glslang

      - name: check shader compilers are working
        run: |
          naga backend-wgpu/src/shaders/stroke_mesh.wgsl
          glslangValidator backend-gl/src/shaders/stroke_line.vert

      - name: test
        run: cargo test --release --features pmb-release

      - name: build
        run: cargo build --release --features pmb-release

      - name: gl backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-gl-macos
          path: target/release/backend-gl

      - name: wgpu backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-wgpu-macos
          path: target/release/backend-wgpu

      - name: util artifact
        uses: actions/upload-artifact@v3
        with:
          name: util-macos
          path: target/release/pmb-util

  package:
    needs: [windows, linux, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - run: |
          mv backend-gl-win.exe backend-gl.exe
          mv backend-wgpu-win.exe backend-wgpu.exe
          mv util-windows.exe util.exe
          7z a windows.zip backend-gl.exe backend-wgpu.exe util.exe
          rm *.exe

          mv backend-gl-linux backend-gl
          mv backend-wgpu-linux backend-wgpu
          mv util-linux util
          7z a linux.zip backend-gl backend-wgpu util
          rm backend-gl backend-wgpu util

          mv backend-gl-macos backend-gl
          mv backend-wgpu-macos backend-wgpu
          mv util-macos util
          7z a macos.zip backend-gl backend-wgpu util
          rm backend-gl backend-wgpu util

      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: true
          files: |
            windows.zip
            linux.zip
            macos.zip
